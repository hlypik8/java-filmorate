CREATE TABLE IF NOT EXISTS users (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar NOT NULL,
  login varchar NOT NULL,
  name varchar,
  birthday date
);

CREATE TABLE IF NOT EXISTS films (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar NOT NULL,
  description varchar(200),
  release_date date NOT NULL,
  duration integer NOT NULL,
  mpa_rating_id integer NOT NULL
);

CREATE TABLE IF NOT EXISTS friends (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id integer NOT NULL,
  friend_id integer NOT NULL,
  accepted boolean NOT NULL DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS likes (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id integer NOT NULL,
  film_id integer NOT NULL
);

CREATE TABLE IF NOT EXISTS films_genres (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  film_id integer NOT NULL,
  genre_id integer NOT NULL
);

CREATE TABLE IF NOT EXISTS genres (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa_ratings (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar NOT NULL,
  description varchar
);

ALTER TABLE friends ADD FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE friends ADD FOREIGN KEY (friend_id) REFERENCES users (id);

ALTER TABLE likes ADD FOREIGN KEY (user_id) REFERENCES users (id);
ALTER TABLE likes ADD FOREIGN KEY (film_id) REFERENCES films (id);

ALTER TABLE films_genres ADD FOREIGN KEY (film_id) REFERENCES films (id);
ALTER TABLE films_genres ADD FOREIGN KEY (genre_id) REFERENCES genres (id);

ALTER TABLE films ADD FOREIGN KEY (mpa_rating_id) REFERENCES mpa_ratings (id);