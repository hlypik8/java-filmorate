CREATE TABLE IF NOT EXISTS users (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar NOT NULL,
  login varchar NOT NULL,
  name varchar,
  birthday date
);

CREATE TABLE IF NOT EXISTS mpa_ratings (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar NOT NULL,
  description varchar
);

CREATE TABLE IF NOT EXISTS films (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar NOT NULL,
  description varchar(200),
  release_date date NOT NULL,
  duration integer NOT NULL,
  mpa_rating_id integer NOT NULL,
  CONSTRAINT fk_mpa_rating FOREIGN KEY (mpa_rating_id) REFERENCES mpa_ratings(id)
);

CREATE TABLE IF NOT EXISTS friends (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id integer NOT NULL,
  friend_id integer NOT NULL,
  accepted boolean NOT NULL DEFAULT FALSE,
  CONSTRAINT fk_friends_user FOREIGN KEY (user_id) REFERENCES users(id),
  CONSTRAINT fk_friends_friend FOREIGN KEY (friend_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS genres (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS directors (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS likes (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id integer NOT NULL,
  film_id integer NOT NULL,
  CONSTRAINT fk_likes_user FOREIGN KEY (user_id) REFERENCES users(id),
  CONSTRAINT fk_likes_film FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS films_genres (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  film_id integer NOT NULL,
  genre_id integer NOT NULL,
  CONSTRAINT fk_films_genres_film FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
  CONSTRAINT fk_films_genres_genre FOREIGN KEY (genre_id) REFERENCES genres(id)
);

CREATE TABLE IF NOT EXISTS films_directors (
  film_id integer NOT NULL,
  director_id integer NOT NULL,
  PRIMARY KEY (film_id, director_id),
  CONSTRAINT fk_films_directors_film FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
  CONSTRAINT fk_films_directors_director FOREIGN KEY (director_id) REFERENCES directors(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS reviews (
    review_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content varchar NOT NULL,
    is_positive boolean NOT NULL,
    user_id integer NOT NULL,
    film_id integer NOT NULL,
    useful integer DEFAULT 0,
    created_at timestamp DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_reviews_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_reviews_film FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS review_likes (
    id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    review_id integer NOT NULL,
    user_id integer NOT NULL,
    is_like boolean NOT NULL,
    CONSTRAINT fk_review_likes_review FOREIGN KEY (review_id) REFERENCES reviews(id) ON DELETE CASCADE,
    CONSTRAINT fk_review_likes_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT uq_review_user UNIQUE (review_id, user_id)
);